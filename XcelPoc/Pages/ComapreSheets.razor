@inject IJSRuntime JSRuntime
@implements IAsyncDisposable
@page "/compareSheets"
@using Newtonsoft.Json;
@using XcelPoc.Data;

<h3>Comapre Sheets</h3>
<div id="spreadsheet"></div>
<div id="secondSpreadsheet"></div>
@code {
    private IJSObjectReference? module;
    private IJSObjectReference? secondModule;
    private string? result;
    private string? secondResult;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var myObject = "";
        var js = JsonConvert.DeserializeObject<JsSpreadWorksheet>(myObject);
        var serjs = JsonConvert.SerializeObject(js);
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./jspreadsheet.js");
            if (module != null)
            {
                result = await module.InvokeAsync<string>("load_spreadsheet", serjs);
            }
            secondModule = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./jspreadsheet.js");
            if (secondModule != null)
            {
                secondResult = await secondModule.InvokeAsync<string>("load_secondSpreadsheet", js);
            }
        }
    }
    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
        if (secondModule is not null)
        {
            await secondModule.DisposeAsync();
        }

    }

}
